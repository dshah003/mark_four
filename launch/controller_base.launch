<launch>
 
  <group ns="mark_four">
  <!-- Robot Model -->
    <arg name="model" default="$(find mark_four)/urdf/mark_four.urdf"/>
    <arg name="gui" default="false" />
    <arg name="rvizconfig" default="$(find urdf_tutorial)/rviz/urdf.rviz" />

    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
    <param name="use_gui" value="$(arg gui)"/>

    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

   <!-- joy node -->
    <node respawn="true" pkg="joy" type="joy_node" name="turtle_joy" output="screen">
      <param name="dev" type="string" value="/dev/input/js0" />
      <param name="deadzone" value="0.12" />
    </node>

   <!-- Axes -->
    <param name="axis_linear" value="1" type="int"/>
    <param name="axis_angular" value="0" type="int"/>
    <param name="scale_linear" value="0.2" type="double"/>
    <param name="scale_angular" value="1.5707" type="double"/>  

    <node pkg="mark_four" type="mark_four_controller" name="controller" output="screen"/>
    
    <node pkg="rosserial_python" type="serial_node.py" name="serial_node" output="screen">
      <param name="port" type="string" value="/dev/ttyACM0"/>
      <param name="baud" type="int" value="57600"/>
    </node>

    <!-- kinect and Rtabmap odometry launchfile -->
    <include file="$(find openni_launch)/launch/openni.launch" />
    <include file="$(find mark_four)/launch/controller_odometry.launch"/>
  </group>

</launch>